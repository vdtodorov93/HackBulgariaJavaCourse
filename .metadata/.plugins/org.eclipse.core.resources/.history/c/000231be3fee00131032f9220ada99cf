package com.hackbulgaria.collectionsfun;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;

import org.junit.Before;
import org.junit.Test;

public class RotateElementsOfCollectionTestCase {
    Collection<Integer> coll;
    
    @Before
    public void setUp() throws Exception {
        coll = new ArrayList<>();
        for(int i = 2; i <= 4; i++){
            coll.add(i);
        }
    }

    @Test
    public void trivialTest() {
        RotateElementsOfCollection.rotate(coll, 1);
        Iterator<Integer> it = coll.iterator();
        assertTrue(it.hasNext());
        assertEquals(4, (int)it.next());
        assertTrue(it.hasNext());
        assertEquals(2, (int)it.next());
        assertTrue(it.hasNext());
        assertEquals(3, (int)it.next());
        assertFalse(it.hasNext());
    }

    @Test
    public void testWithStrings(){
        Collection<String> strings = new LinkedList<String>();
        strings.add("baba");
        strings.add("eggs");
        strings.add("span");
        RotateElementsOfCollection.rotate(strings, 1);
        Iterator<String> it = strings.iterator();
        assertEquals("span", it.next());
        assertEquals("baba", it.next());
        assertEquals("eggs", it.next()); 
    }
    
    @Test
    public void testWithTwiceReverse(){
        RotateElementsOfCollection.rotate(coll, 2);
        Iterator<Integer> it = coll.iterator();
        assertEquals(4, (int)it.next());
        assertEquals(2, (int)it.next());
        assertEquals(3, (int)it.next());
    }
}
